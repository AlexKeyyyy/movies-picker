version: "3.9"

services:
  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: moviedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: alexkoba
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${PORT}/movies?page=1&size=1 | grep movie_id"]
      interval: 5s
      timeout: 2s
      retries: 10
    ports:
      - "${PORT}:${PORT}"
    entrypoint:
      - sh
      - -c
      - |
        until pg_isready -h postgres -U postgres; do
          echo "Waiting Postgres…"
          sleep 2
        done
        echo "Importing movies…"
        /app/import_all_movies
        echo "Starting API…"
        exec /app/server

  builder:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    working_dir: /app
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - PORT=${PORT}
      - API_URL=http://api:8080
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_started
    entrypoint:
      - sh
      - -c
      - |
        echo "=== Running unit tests ==="
        go test ./internal/... ./pkg/... -v -cover

        echo "=== Running integration tests ==="
        go test ./test/integration/... -v -timeout 2m

        echo "=== Tests passed, sleeping… ==="
        sleep infinity

volumes:
  db_data:
