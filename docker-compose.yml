services:
  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: moviedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: alexkoba
    volumes:
     - db_data:/var/lib/postgresql/data
     - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  api:
    image: movies-picker_api
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - .env
    environment:
      - DB_HOST=postgres     # имя сервиса БД из этого compose
      - DB_USER=postgres     # пользователь Postgres
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${PORT}:${PORT}"
    entrypoint:
      - /bin/sh
      - -c
      - |
        # Ждём запуска Postgres-сервиса по его DNS-имени внутри сети
        until pg_isready -h postgres -U postgres; do
          echo "Waiting Postgres..."
          sleep 2
        done

        echo "Postgres is ready, importing movies…"
        /app/import_all_movies

        echo "Starting API…"
        exec /app/server




  builder:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    working_dir: /app
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - postgres
    # просто держим контейнер живым
    command: ["sleep", "infinity"]

volumes:
  db_data:
