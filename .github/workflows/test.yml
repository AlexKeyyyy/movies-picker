name: CI: Unit & Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    name: üß™ Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Download modules
        run: go mod download

      - name: Run unit tests
        run: go test ./internal/... ./pkg/... -v -cover

  integration-tests:
    name: üîó Integration Tests
    needs: unit-tests
    runs-on: ubuntu-latest

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º Docker‚ÄëCompose –¥–ª—è –ø–æ–¥–Ω—è—Ç–∏—è –ë–î –∏ API
    steps:
      - uses: actions/checkout@v4

      - name: Create .env for Docker
        run: |
          echo "PORT=8080"                        >> .env
          echo "DB_URL=postgres://postgres:alexkoba@db:5432/moviedb?sslmode=disable" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}"  >> .env
          echo "KINOPOISK_API_KEY=${{ secrets.KINOPOISK_API_KEY }}" >> .env
          echo "YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}" >> .env


      - name: Set up Docker Compose
        run: |
          # (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ) docker-compose version
          docker compose version

      - name: Start services (Postgres + API)
        env:
          PORT: 8080
        run: |
          docker-compose down -v
          docker-compose up -d postgres api

      - name: Wait for Postgres
        run: |
          until docker exec $(docker-compose ps -q postgres) pg_isready -U postgres; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Wait for API healthcheck
        run: |
          echo "Waiting for API to import movies and become healthy..."
          # –ñ–¥—ë–º, –ø–æ–∫–∞ API healthcheck –Ω–µ —Å–∫–∞–∂–µ—Ç OK
          until curl -f http://localhost:8080/movies?page=1&size=1; do
            echo "Waiting for API..."
            sleep 2
          done

      - name: Run integration tests
        env:
          API_URL: http://api:8080
        run: |
          # –ü—Ä–æ–≥–æ–Ω–∏–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ builder
          docker-compose run --rm builder
